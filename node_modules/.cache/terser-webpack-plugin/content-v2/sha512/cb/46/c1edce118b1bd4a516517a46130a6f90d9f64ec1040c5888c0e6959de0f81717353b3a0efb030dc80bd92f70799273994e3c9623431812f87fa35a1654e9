{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Likhith Aalla\\\\Desktop\\\\GIT HUB\\\\React.js\\\\src\\\\components\\\\Titles.js\",\"C:\\\\Users\\\\Likhith Aalla\\\\Desktop\\\\GIT HUB\\\\React.js\\\\src\\\\components\\\\Form.js\",\"C:\\\\Users\\\\Likhith Aalla\\\\Desktop\\\\GIT HUB\\\\React.js\\\\src\\\\components\\\\Weather.js\",\"C:\\\\Users\\\\Likhith Aalla\\\\Desktop\\\\GIT HUB\\\\React.js\\\\src\\\\App.js\",\"C:\\\\Users\\\\Likhith Aalla\\\\Desktop\\\\GIT HUB\\\\React.js\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Likhith Aalla\\\\Desktop\\\\GIT HUB\\\\React.js\\\\src\\\\index.js\"],\"names\":[\"Titles\",\"react_default\",\"a\",\"createElement\",\"React\",\"Component\",\"Form\",\"onSubmit\",\"this\",\"props\",\"getWeather\",\"type\",\"name\",\"placeholder\",\"Weather\",\"city\",\"country\",\"temperature\",\"humidity\",\"APP_ID\",\"App\",\"state\",\"undefined\",\"error\",\"_callee\",\"e\",\"api_call\",\"response\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"preventDefault\",\"target\",\"elements\",\"value\",\"fetch\",\"concat\",\"sent\",\"json\",\"console\",\"log\",\"_this\",\"setState\",\"main\",\"temp\",\"sys\",\"stop\",\"components_Titles\",\"components_Form\",\"components_Weather\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"+PAWeA,mLARZ,OACEC,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,gBACAF,EAAAC,EAAAC,cAAA,IAAA,KAAA,4DALcC,EAAAA,EAAMC,WCWZC,mLATV,OACOL,EAAAC,EAAAC,cAAA,OAAA,CAAMI,SAAUC,KAAKC,MAAMC,YAC9BT,EAAAC,EAAAC,cAAA,QAAA,CAAOQ,KAAK,OAAOC,KAAK,OAAOC,YAAY,YAC3CZ,EAAAC,EAAAC,cAAA,QAAA,CAAOQ,KAAK,OAAOC,KAAK,UAAUC,YAAY,eAC9CZ,EAAAC,EAAAC,cAAA,SAAA,KAAA,uBANUC,EAAAA,EAAMC,WCWVS,mLATV,OACEb,EAAAC,EAAAC,cAAA,MAAA,KACCK,KAAKC,MAAMM,MAAOP,KAAKC,MAAMO,SAASf,EAAAC,EAAAC,cAAA,IAAA,KAAA,aAAcK,KAAKC,MAAMM,KAAzB,IAAgCP,KAAKC,MAAMO,SACjFR,KAAKC,MAAMQ,aAAahB,EAAAC,EAAAC,cAAA,IAAA,KAAA,eAAgBK,KAAKC,MAAMQ,aACpDT,KAAKC,MAAMS,UAAUjB,EAAAC,EAAAC,cAAA,IAAA,KAAA,YAAaK,KAAKC,MAAMS,kBAN9Bd,EAAAA,EAAMC,WCItBc,EAAS,mCA0CAC,6MAxCXC,MAAM,CACJJ,iBAAYK,EACZP,UAAKO,EACLN,aAAQM,EACRJ,cAASI,EACTC,WAAMD,KAGRZ,iDAAa,SAAAc,EAAMC,GAAN,IAAAV,EAAAC,EAAAU,EAAAC,EAAA,OAAAC,EAAA1B,EAAA2B,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAEXP,EAAEQ,iBACIlB,EAAOU,EAAES,OAAOC,SAASpB,KAAKqB,MAC9BpB,EAAUS,EAAES,OAAOC,SAASnB,QAAQoB,MAJ/BN,EAAAE,KAAA,EAKYK,MAAK,qDAAAC,OAAsDvB,EAAtD,KAAAuB,OAA8DtB,EAA9D,WAAAsB,OAA+EnB,EAA/E,kBALjB,KAAA,EAAA,OAKLO,EALKI,EAAAS,KAAAT,EAAAE,KAAA,EAMYN,EAASc,OANrB,KAAA,EAMLb,EANKG,EAAAS,KAOXE,QAAQC,IAAIf,GACZgB,EAAKC,SAAS,CACd3B,YAAaU,EAASkB,KAAKC,KAC3B/B,KAAMY,EAASf,KACfI,QAASW,EAASoB,IAAI/B,QACtBE,SAAUS,EAASkB,KAAK3B,SACxBK,WAAOD,IAbI,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAAkB,SAAAxB,oIAiBb,OACCvB,EAAAC,EAAAC,cAAA,MAAA,KACCF,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAMxC,WAAYF,KAAKE,aACvBT,EAAAC,EAAAC,cAACgD,EAAD,CACElC,YAAcT,KAAKa,MAAMJ,YACzBF,KAAMP,KAAKa,MAAMN,KACjBC,QAASR,KAAKa,MAAML,QACpBE,SAAUV,KAAKa,MAAMH,SACrBK,MAAOf,KAAKa,MAAME,gBAnCNnB,EAAAA,EAAMC,WCMN+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\r\\nclass Titles extends React.Component{\\r\\n\\trender(){\\r\\n\\t  return (\\r\\n    \\t<div>\\r\\n      \\t<h1>Weather App </h1>\\r\\n      \\t<p> Helps you find weather conditions in cities... </p>\\r\\n    \\t</div>\\r\\n  );\\r\\n}\\r\\n};\\r\\nexport default Titles;\",\"import React from 'react';\\r\\nclass Form extends React.Component {\\r\\n  render(){\\r\\n  \\t  return (\\r\\n            <form onSubmit={this.props.getWeather}>\\r\\n        \\t<input type=\\\"text\\\" name=\\\"city\\\" placeholder=\\\"City...\\\" />\\r\\n        \\t<input type=\\\"text\\\" name=\\\"country\\\" placeholder=\\\"Country...\\\" />\\r\\n        \\t<button>Get Weather</button>\\r\\n\\t\\t\\t</form>\\r\\n  \\t\\t);\\r\\n  \\t}\\r\\n};\\r\\nexport default Form;\",\"import React from 'react';\\r\\nclass Weather extends React.Component {\\r\\n  render(){\\r\\n  \\t  return (\\r\\n       <div>\\r\\n       {this.props.city&& this.props.country&&<p> location:{this.props.city},{this.props.country}</p>}\\r\\n       {this.props.temperature&&<p>temperature:{this.props.temperature}</p>}\\r\\n      {this.props.humidity&&<p>humidity:{this.props.humidity}</p>}\\r\\n\\t\\t</div>\\r\\n  \\t\\t);\\r\\n  \\t}\\r\\n};\\r\\nexport default Weather;\",\"\\r\\nimport React from 'react';\\r\\nimport Titles from './components/Titles';\\r\\nimport Form from './components/Form';\\r\\nimport Weather from './components/Weather';\\r\\nconst APP_ID = \\\"fbf712a5a83d7305c3cda4ca8fe7ef29\\\";\\r\\n  class App extends React.Component {\\r\\n    state={\\r\\n      temperature:undefined,\\r\\n      city:undefined,\\r\\n      country:undefined,\\r\\n      humidity:undefined,\\r\\n      error:undefined,\\r\\n    }\\r\\n   \\r\\n    getWeather = async(e) => {\\r\\n      \\r\\n      e.preventDefault();\\r\\n      const city = e.target.elements.city.value;\\r\\n      const country = e.target.elements.country.value;\\r\\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${APP_ID}&units=metric`);\\r\\n      const response = await api_call.json();\\r\\n      console.log(response);\\r\\n      this.setState({\\r\\n      temperature: response.main.temp,\\r\\n      city: response.name,\\r\\n      country: response.sys.country,\\r\\n      humidity: response.main.humidity,\\r\\n      error: undefined,  \\r\\n      });\\r\\n    }\\r\\n    render() {\\r\\n    return (\\r\\n     <div> \\r\\n      <Titles/>\\r\\n      <Form getWeather={this.getWeather}/>\\r\\n      <Weather\\r\\n        temperature= {this.state.temperature}\\r\\n        city={this.state.city}\\r\\n        country={this.state.country}\\r\\n        humidity={this.state.humidity}\\r\\n        error={this.state.error}\\r\\n        />\\r\\n     </div>\\r\\n    ) \\r\\n  }\\r\\n}\\r\\nexport default App;\",\"// This optional code is used to register a service worker.\\r\\n// register() is not called by default.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on subsequent visits to a page, after all the\\r\\n// existing tabs open on the page have been closed, since previously cached\\r\\n// resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model and instructions on how to\\r\\n// opt-in, read http://bit.ly/CRA-PWA\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not localhost. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (installingWorker == null) {\\r\\n          return;\\r\\n        }\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the updated precached content has been fetched,\\r\\n              // but the previous service worker will still serve the older\\r\\n              // content until all client tabs are closed.\\r\\n              console.log(\\r\\n                'New content is available and will be used when all ' +\\r\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\r\\n              );\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\n\\r\\nReactDOM.render(<App />, document.getElementById('root'));\\r\\n\\r\\n// If you want your app to work offline and load faster, you can change\\r\\n// unregister() to register() below. Note this comes with some pitfalls.\\r\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\r\\nserviceWorker.unregister();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(t,e,n){t.exports=n(19)},16:function(t,e,n){},19:function(t,e,n){\"use strict\";n.r(e);var r=n(0),a=n.n(r),i=n(8),c=n.n(i),o=(n(16),n(6)),u=n.n(o),s=n(9),l=n(1),p=n(2),h=n(4),m=n(3),y=n(5),d=function(t){function e(){return Object(l.a)(this,e),Object(h.a)(this,Object(m.a)(e).apply(this,arguments))}return Object(y.a)(e,t),Object(p.a)(e,[{key:\"render\",value:function(){return a.a.createElement(\"div\",null,a.a.createElement(\"h1\",null,\"Weather App \"),a.a.createElement(\"p\",null,\" Helps you find weather conditions in cities... \"))}}]),e}(a.a.Component),f=function(t){function e(){return Object(l.a)(this,e),Object(h.a)(this,Object(m.a)(e).apply(this,arguments))}return Object(y.a)(e,t),Object(p.a)(e,[{key:\"render\",value:function(){return a.a.createElement(\"form\",{onSubmit:this.props.getWeather},a.a.createElement(\"input\",{type:\"text\",name:\"city\",placeholder:\"City...\"}),a.a.createElement(\"input\",{type:\"text\",name:\"country\",placeholder:\"Country...\"}),a.a.createElement(\"button\",null,\"Get Weather\"))}}]),e}(a.a.Component),b=function(t){function e(){return Object(l.a)(this,e),Object(h.a)(this,Object(m.a)(e).apply(this,arguments))}return Object(y.a)(e,t),Object(p.a)(e,[{key:\"render\",value:function(){return a.a.createElement(\"div\",null,this.props.city&&this.props.country&&a.a.createElement(\"p\",null,\" location:\",this.props.city,\",\",this.props.country),this.props.temperature&&a.a.createElement(\"p\",null,\"temperature:\",this.props.temperature),this.props.humidity&&a.a.createElement(\"p\",null,\"humidity:\",this.props.humidity))}}]),e}(a.a.Component),v=\"fbf712a5a83d7305c3cda4ca8fe7ef29\",j=function(t){function e(){var t,n;Object(l.a)(this,e);for(var r=arguments.length,a=new Array(r),i=0;i<r;i++)a[i]=arguments[i];return(n=Object(h.a)(this,(t=Object(m.a)(e)).call.apply(t,[this].concat(a)))).state={temperature:void 0,city:void 0,country:void 0,humidity:void 0,error:void 0},n.getWeather=function(){var t=Object(s.a)(u.a.mark(function t(e){var r,a,i,c;return u.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return e.preventDefault(),r=e.target.elements.city.value,a=e.target.elements.country.value,t.next=5,fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(r,\",\").concat(a,\"&appid=\").concat(v,\"&units=metric\"));case 5:return i=t.sent,t.next=8,i.json();case 8:c=t.sent,console.log(c),n.setState({temperature:c.main.temp,city:c.name,country:c.sys.country,humidity:c.main.humidity,error:void 0});case 11:case\"end\":return t.stop()}},t)}));return function(e){return t.apply(this,arguments)}}(),n}return Object(y.a)(e,t),Object(p.a)(e,[{key:\"render\",value:function(){return a.a.createElement(\"div\",null,a.a.createElement(d,null),a.a.createElement(f,{getWeather:this.getWeather}),a.a.createElement(b,{temperature:this.state.temperature,city:this.state.city,country:this.state.country,humidity:this.state.humidity,error:this.state.error}))}}]),e}(a.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(a.a.createElement(j,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}},[[10,1,2]]]);","extractedComments":[]}